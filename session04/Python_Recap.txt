

---------------------------
ZBIORY

- Nieuporządkowana kolekcja elementów
- Elementy zbioru mogą być różnych typów

# twórz zbiór pusty
s = set()

# twórz zbiór z listy
s2 = set([2,3,5]) 

# moc zbioru
len(s)

# wstaw element do zbioru
s.add(el) 

# usuń istniejący element ze zbioru
s.remove(el) 

# usuń element ze zbioru
s.discard(el) 

# opróżnij zbiór
s.clear()

# czy należy
if el in s:

# czy nie należy
if el not in s: 

# suma mnogościowa zbiorów s1 i s2
s1.union(s2) 

# część wspólna zbiorów s1 i s2
s1.intersection(s2)


---------------------------
LISTY

- Uporządkowane kolekcja elementów
- Elementy listy mogą być różnych typów
- Elementy listy mogą być zmieniane
- Rozmiar listy może się zmieniać
- Elementy dostępne poprzez indeksowanie
- Operacje na listach analogiczne do operacji na napisach:
	a+b, 
	a*3, 
	a[0], 
	a[-1], 
	a[1:], 
	len(a)

lista1 = [ ]
lista2 = [2, 3, 5, 7]
lista3 = [23, ”ala”, [1, 2, 3]]

# dołącz element do listy
lista.append(element)

# pobierz element z listy
lista.pop()

# dołącz kilka elementów
lista.extend(lista)

# posortuj listę w miejscu
lista.sort()

# stwórz posortowaną listę
lista2 = sorted(lista)

# odwróć kolejność elementów
lista.reverse()


---------------------------
KROTKI

- Krotka (tuple) analogiczna do listy ale bez możliwości zmian zawartości

k1 = ( ,)
k2 = ( ’ala’, ’ola’, ’ula’ )
a, b, c = k2
lista = list(k2) 
k3 = tuple(lista)

# funkcja zwraca krotkę
x1, x2 = rk(a, b, c) 



---------------------------
SLOWNIKI

- Słownik, mapa, tabela, tablica asocjacyjna, tablica z haszowaniem
- Nieuporządkowana kolekcja par klucz/wartość
- Klucz najczęściej jest liczbą lub napisem
- Klucz musi być unikalny
- Wartość może być dowolnego typu

t1 = { }
t2 = { ’ala’:6, ’ola’:12, ’jan’:23 }

# wartość dla klucza
h[klucz]

# przypisanie wartości
h[klucz]=wartosc

# usuń wartość ze słownika
del h[klucz]

# usuwa słownik
h.clear()

# liczba pozycji w słowniku
len(h)

# wartość dla klucza lub default
h.get(klucz, default) 

# lista kluczy
h.keys()

# lista wartości
h.values()

# lista par
h.items()

# kopia słownika
h.copy()


---------------------------
PLIKI

f = open(filename [, tryb [, buffersize])

- tryb: "r", "w", "a" ; default "r“
- buffersize: 0=unbuffered; 1=line-buffered; buffered


read([nbytes])

# pojedyńcza linia
readline()

# wszystkie linie jako lista
readlines()

write(string)
writelines(list)
seek(pos [, how]), tell()
flush(), close()
fileno()




 



 