source('~/Documents/git/data-science-postgrad/session02/1_statistics/intro2R-lab1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/intro2R-lab1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/intro2R-lab1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/intro2R-lab1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/stat-1_RScript1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/stat-1_RScript1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/stat-1_RScript1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/stat-1_RScript1.R')
source('~/Documents/git/data-science-postgrad/session02/1_statistics/stat-1_RScript1.R')
x <- 2 # jednoelementowy wektor
y <- x + 5
# Create vector
xs <- c(1,2,3,4,5)
ys <- c(10,20,30,40,50)
zs <- 1:100
zs
# Element-wise sum
z1 <- xs+ys
z2 <- xs+1
z4 <- xs^2
# Concatenation
z3 <- c(xs, ys)
str1 <- c('aaa', 'bbb')
tcrossprod(ys,xs)
# wektor jest struktura homogeniczna, w czasie utworzenia
# nastepuje konwersja to typu wspolnego (str)
v1 <- c(1, "abc")
v1
v1 <- c(v1, TRUE)
v1
v1 <- c(v1, c(1,2))
v1
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
# -----------------------
R.version.string
getRversion()
help(help)
?help
?"+"
library(help = "stats")
2+2
2^5
FALSE == FALSE
T == TRUE
3 > 2
2 +
2
print("My name is Inigo Montoya. You killed my father. Prepare to die.")
?print
cat("My name is Inigo Montoya. You killed my father. Prepare to die.")
?cat
cat('aa', 'bb')
?c
xs <- c(1,2,3,4,5)
ys <- c(10,20,30,40,50)
cat(xs, ys)
print("My name is Inigo Montoya.", "You killed my father.", "Prepare to die.") # !!!
#ca # naciskamy klawisz [TAB], wybieramy z listy "cat", otwieramy nawias i... kontynuujemy wg nastepnej linii :)
cat(c('a','b'))
cat('a', 'b')
install.packages(c("boot", "foreign", "KernSmooth", "mgcv", "nlme"))
?getwd
getwd()
setwd("~/Documents/git/data-science-postgrad/session02/1_statistics")
setwd("~/Documents/git/data-science-postgrad/session02/1_statistics")
x1 <- 10
.x2 <- 3.5
x.3 <- "abc"
ls()
?ls
ls(all.names = T)
?rm
rm(x.3)
x1 <- TRUE
class(x1)
?logical
is.logical(x1)
?numeric
?integer
?complex
?character
?vector
0.1 + 0.1 == 0.2
0.1 + 0.1 + 0.1 == 0.3
0.1 + 0.1 + 0.1
maxN <- 2^.Machine$double.digits
maxN + 1 == MaxN
maxN + 1 == maxN
install.packages("tidyverse")
------------------------------
#
# Wygeneruj losowo zestaw danych
# x - dziedzina
?sample
# Wygeneruj losowo zestaw danych
# x - dziedzina
?sample()
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
# 1. Obliczanie sredniej z proby ----
mean(xs)
set.seed(1)
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
# 1. Obliczanie sredniej z proby ----
mean(xs)
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R', echo=TRUE)
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R', echo=TRUE)
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
# 1. Obliczanie sredniej z proby ----
mean(xs)
set.seed(1)
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
# 1. Obliczanie sredniej z proby ----
mean(xs)
set.seed(1) # reset generatoras
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
# 1. Obliczanie sredniej z proby ----
mean(xs)
set.seed(5) # reset generatoras
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(xs)
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
source('~/Documents/git/data-science-postgrad/session02/4_statystyka/Stat-2_RScript01.R')
sum(xs) / length(xs)
my.mean <- function(xs) {
sum(xs) / length(xs)
}
my.mean(xs)
my.mean
# 2. Obliczanie mediany ----
?datasets
print(median(xs))
# 2. Obliczanie mediany ----
?datasets
median(mtcars$mpg)
mtcars
xs.sorted <- sort(xs)
summary(xs)
summary(mtcars)
?quantile
fivenum(xs)
?fivenum
var(xs)
std(xs)
sd(xs)
IQR(xs)
dice(rolls = 1, ndice = 2, sides = 6, plot.it = FALSE, load = rep(1, sides))
sample(x=1:6, size=6, replace=FALSE, prob=NULL)
library(dice)
library('dice')
install.packages('dice')
library('dice')
v <- c(1,2,3,4,3,2,3,4,2)
v <- c(1,2,3,4,3,2,3,4,2)
v[v ==2] # pokaz wszystkie v spelniajace takie ograniczenie
v==2
len(v[v ==2])/len(v)
length(v[v ==2])/len(v)
print(length(v[v ==2])/len(v))
print(length(v[v ==2])/length(v))
xs <- sample(x=1:6, size=6, replace=TRUE, prob=NULL)
print(length(xs[xs ==3])/length(xs))
xs <- sample(x=1:1000, size=6, replace=TRUE, prob=NULL)
print(length(xs[xs ==3])/length(xs))
xs <- sample(x=1:6, size=1000, replace=TRUE, prob=NULL)
print(length(xs[xs ==3])/length(xs))
trials <-30
omega <- 1:6
sim.results <-sample(x=omega, size=trials, replace=TRUE,prob=NULL)
prob.sim <- mean(sim.results == 3)
prob.exact <- 1/6 # exact value
approx.error <- (abs(prob.sim - prob.exact))/prob.exact
approx.error
